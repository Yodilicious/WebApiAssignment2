// <auto-generated />
using Assignment2Music.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Assignment2Music.Api.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20170923173935_IntialMigration")]
    partial class IntialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment2Music.Api.Models.Artist", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("RecordId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Assignment2Music.Api.Models.Genre", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("RecordId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Assignment2Music.Api.Models.Review", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ArtistId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<DateTime>("ReviewedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("TrackId");

                    b.HasKey("RecordId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("TrackId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Assignment2Music.Api.Models.Track", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ArtistId");

                    b.Property<long>("GenreId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrackLength");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("RecordId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Assignment2Music.Api.Models.Review", b =>
                {
                    b.HasOne("Assignment2Music.Api.Models.Artist", "Artist")
                        .WithMany("Reviews")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Assignment2Music.Api.Models.Track", "Track")
                        .WithMany("Reviews")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Assignment2Music.Api.Models.Track", b =>
                {
                    b.HasOne("Assignment2Music.Api.Models.Artist", "Artist")
                        .WithMany("Tracks")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Assignment2Music.Api.Models.Genre", "Genre")
                        .WithMany("Tracks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
